<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnUserBackPagesView.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFMAAABKCAYAAADHa2hTAAAABGdBTUEAAOD8YVAtlgAAAvdpQ0NQUGhv
        dG9zaG9wIElDQyBwcm9maWxlAAA4y2NgYJ7g6OLkyiTAwFBQVFLkHuQYGREZpcB+noGNgZkBDBKTiwsc
        AwJ8QOy8/LxUBlTAyMDw7RqIZGC4rAsyi4E0wJoMtBhIHwBio5TU4mQg/QWI08tLCoDijDFAtkhSNphd
        AGJnhwQ5A9ktDAxMPCWpFSC9DM75BZVFmekZJQqGlpaWCo4p+UmpCsGVxSWpucUKnnnJ+UUF+UWJJakp
        QLVQO0CA1yW/RME9MTNPwchAlYHKABSOEBYifBBiCJBcWlQGD0oGBgEGBQYDBgeGAIZEhnqGBQxHGd4w
        ijO6MJYyrmC8xyTGFMQ0gekCszBzJPNC5jcsliwdLLdY9VhbWe+xWbJNY/vGHs6+m0OJo4vjC2ci5wUu
        R64t3JrcC3ikeKbyCvFO4hPmm8Yvw79YQEdgh6Cr4BWhVKEfwr0iKiJ7RcNFv4hNEjcSvyJRISkneUwq
        X1pa+oRMmay67C25PnkX+T8KWxULlfSU3iqvVSlQNVH9qXZQvUsjVFNJ84PWAe1JOqm6VnqCeq/0jxgs
        MKw1ijG2NZE3ZTZ9aXbBfKfFEssJVnXWuTZxtoF2rvbWDsaOOk5qzkouCq7ybgruyh7qnrpeJt42Pu6+
        wX4J/vkB9YETg5YG7wq5GPoynClCLtIqKiK6ImZm7J64BwlsibpJYckNKWtSb6ZzZFhkZmbNzb6Yy55n
        n19RsKnwXbF2SVbpqrI3FfqVJVW7ahhrveqm1j9s1GuqaT7bKtdW2H60U7qrqPt0r2pfY//diTaTZk/+
        OzV+2uEZGjP7Z32fkzD39HzzBUsXiSxuXfJtWebyeytDVp1e47J233rLDds2mWzestVk2/YdVjv373bd
        c3Zf2P4HB3MO/TzSfkz8+IqT1qfOnUk+++v8pIval45eSbz67/qcmza37t6pv6d8/8TDvMdiT/Y/y3wh
        8vLg6/y38u8ufGj6ZPr51dcF38N/Cvw69af1n+P//wANAA8013ReGAAAAAlwSFlzAAALEwAACxMBAJqc
        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
</value>
  </data>
</root>